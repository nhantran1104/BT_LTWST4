package vn.iotstar.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import vn.iotstar.configs.DBConnectMySQL;
import vn.iotstar.dao.ICategoryDao;
import vn.iotstar.models.CategoryModel;

public class CategoryDaoImpl extends DBConnectMySQL implements ICategoryDao {

	public Connection conn = null;
	public PreparedStatement ps = null;
	public ResultSet rs = null;
	
	@Override
	public List<CategoryModel> findAll() {
		String sql =  "SELECT * FROM categories";
		List<CategoryModel> list = new ArrayList<>();
		try {
			conn = super.getDatabaseConnection();
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while(rs.next()) {
				CategoryModel category = new CategoryModel();
				category.setCategoryid(rs.getInt("categoryid"));
				category.setCategoryname(rs.getString("categoryname"));
				category.setImages(rs.getString("images"));
				category.setActive(rs.getBoolean("status"));
				list.add(category);
			}
			return list;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public CategoryModel findById(int id) {
		String sql = "SELECT * FROM categories WHERE categoryid = ? ";
		try {
		conn = super.getDatabaseConnection();
		ps = conn.prepareStatement(sql);
		ps.setInt(1, id);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {
		CategoryModel category = new CategoryModel();
		category.setCategoryid(rs.getInt("cate_id"));
		category.setCategoryname(rs.getString("cate_name"));
		category.setImages(rs.getString("images"));
		category.setActive(rs.getBoolean("active"));
		return category;
		}} catch (Exception e) {
		e.printStackTrace();}
		return null;

	}

	@Override
	public void insert(CategoryModel category) {
		String sql = "INSERT INTO categories(categoryname, images, active) VALUES (?,?, ?)";
		try {
		conn = super.getDatabaseConnection();
		ps = conn.prepareStatement(sql);
		ps.setString(1, category.getCategoryname());
		ps.setString(2, category.getImages());
		ps.setBoolean(3, category.isActive());
		ps.executeUpdate();
		} catch (Exception e) {
		e.printStackTrace();
		}

	}

	@Override
	public void update(CategoryModel category) {
		String sql = "UPDATE categories SET categoryname = ?, images = ?, active = ? WHERE categoryid = ?";
		try {
			conn = super.getDatabaseConnection();
			ps = conn.prepareStatement(sql);
			ps.setString(1, category.getCategoryname());
			ps.setString(2, category.getImages());
			ps.setBoolean(3, category.isActive());
			ps.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void delete(int id) {
		String sql = "DELETE FROM categories WHERE categoryid = ?";
		try {
			conn = super.getDatabaseConnection();
			ps = conn.prepareStatement(sql);
			ps.setInt(1, id);
			ps.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public List<CategoryModel> findName(String keyword) {
		String sql = "SELECT * FROM categories WHERE categoryname like ?";
		List<CategoryModel> list = new ArrayList<>();
		try {
			conn = super.getDatabaseConnection();
			ps = conn.prepareStatement(sql);
			ps.setString(1,"%" + keyword + "%");
			rs = ps.getResultSet();
			while(rs.next()) {
				CategoryModel category = new CategoryModel();
				category.setCategoryid(rs.getInt("categoryid"));
				category.setCategoryname(rs.getString("categoryname"));
				category.setImages(rs.getString("images"));
				category.setActive(rs.getBoolean("active"));
				list.add(category);
			}
			return list;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public static void main(String[] args) {
	       CategoryDaoImpl categoryDao = new CategoryDaoImpl();
	        
	        // Gọi phương thức findAll() để lấy danh sách danh mục
	        List<CategoryModel> categories = categoryDao.findAll();
	        
	        // Kiểm tra kết quả
	        if (categories != null) {
	            // In ra từng danh mục
	            for (CategoryModel category : categories) {
	                System.out.println("Category ID: " + category.getCategoryid());
	                System.out.println("Category Name: " + category.getCategoryname());
	                System.out.println("Images: " + category.getImages());
	                System.out.println("Active: " + category.isActive());
	                System.out.println("-----------------------------------");
	            }
	        } else {
	            System.out.println("No categories found or there was an error.");
	        }
	    }
}